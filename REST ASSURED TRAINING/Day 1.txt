Maven Dependency:
 <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>4.3.2</version>
      <scope>test</scope>
 </dependency>

Static imports:
 import static io.restassured.RestAssured.*;
 import static io.restassured.matcher.RestAssuredMatchers.*;
 import static org.hamcrest.Matchers.*;

SETUP APPLICATION IN LOCAL:
 Install Tomcat Server->Use port 8083 as 8080 is used by Jenkins
 Open Services.msc->Start Apache Tomcat Server 8.5.
 Open browser->Go to localhost:8083.
 Click [Manager App]->Enter "admin" as both username & password in the sign in popup.
 Scroll down to 'WAR file to deploy'. Upload 'laptop-bag.war' file & click [Deploy].
 Veify that '/laptop-bag' is displayed inside Applications table.
 Open Postman. Send a GET request to 'http://localhost:8083/laptop-bag/webapi/api/all' -> It should return Status as '204 No Content'.
 204 No Content is displayed because it does not have any data in it.
 Send a POST request with payload before testing GET requests.

FIRST GET REQUEST:
http://localhost:8080/laptop-bag/webapi/api/ping/postman

POST:
http://localhost:8080/laptop-bag/webapi/api/add
Sample Data in JSON:
	{
	  "BrandName": "Dell",
	  "Features": {
		"Feature": [
			"8GB RAM",
			"1TB Hard Drive"
	  ]
			},
	  "Id": 126,
	  "LaptopName": "Latitude"
	}
	
	
1) A simple GET request that prints the response (by default in XML)
2) Set response content to JSON using 2 methods
   a. given().accept(ContentType.JSON)
   b. Map<String, String> headers = new HashMap<>();
      headers.put("Accept", "application/json");
      Response response2 = given().headers(headers)
   Set headers to json/xml/text; text should throw "HTTP 406 Not Acceptable" error
3) Validate Status Code using thenReturn() and then()
   a) thenReturn prints the response body or prettyPrint it; has no in-built assert methods
   b) then() cannot print the body but uses its assertThat() method to validate statusCode
   Use assertThat() to test HttpStatus.SC_OK & HttpStatus.SC_NOT_FOUND responses
